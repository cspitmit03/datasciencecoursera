"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
full_data[, 17] <- as.numeric(full_data[, 17])
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
full_data[, 23] <- as.numeric(full_data[, 23])
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
} else {
stop("invalid outcome")
}
data_by_state <- split(full_data[, c("Hospital.Name", "State", column)], full_data$State)
head(data_by_state)
state_data
rank_hospital <- function(state_data, num) {
ordered_state_data <- order(state_data[3], state_data$Hospital.Name, na.last=NA)
if (num == "best") {
state_data$Hospital.Name[ordered_state_data[1]]
} else if (num == "worst") {
state_data$Hospital.Name[ordered_state_data[length(ordered_state_data)]]
} else if (is.numeric(num)) {
state_data$Hospital.Name[ordered_state_data[num]]
} else {
stop("invalid num")
}
}
state_data
ordered_state_data
num = 20
rank_hospital <- function(state_data, num) {
ordered_state_data <- order(state_data[3], state_data$Hospital.Name, na.last=NA)
if (num == "best") {
state_data$Hospital.Name[ordered_state_data[1]]
} else if (num == "worst") {
state_data$Hospital.Name[ordered_state_data[length(ordered_state_data)]]
} else if (is.numeric(num)) {
state_data$Hospital.Name[ordered_state_data[num]]
} else {
stop("invalid num")
}
}
ordered_state_data
num = "best"
rank_hospital <- function(state_data, num) {
ordered_state_data <- order(state_data[3], state_data$Hospital.Name, na.last=NA)
if (num == "best") {
state_data$Hospital.Name[ordered_state_data[1]]
}
rank_hospital
rank_hospital <- function(state_data, num) {
ordered_state_data <- order(state_data[3], state_data$Hospital.Name, na.last=NA)
if (num == "best") {
state_data$Hospital.Name[ordered_state_data[1]]
}}
rank_hospital
rank_hospital("CO", num)
data_by_state[3]
head(pre_result)
pre_result <- lapply(data_by_state, rank_hospital, num)
head(pre_result)
pre_result
?levels
?seq_along
head(c)
head(b)
c <- split(b, b$states)
head(c)
?colName
c[order(c["PAM"],c["HN"])]
c[order(c["PAM"],c["HN"],decreasing = FALSE)]
test <- c[order(c["PAM"],c["HN"],decreasing = FALSE)]
test
c
class(c)
str(c)
?nrow
c[3]
nrow[3,3]
head(c)
sapply(c, function(x) x[3,c("PAM")])
sapply(c, function(x) x[,c("PAM")])
sapply(c, function(x) x[1,c("PAM")])
sapply(c, function(x) x[c("PAM"),])
sapply(c, function(x) x[c("PAM")])
sapply(c, function(x) x[,c("PAM")])
head(b)
b[3,c("PAM")]
head(b)
b[nrow=3]
b[row = 3]
which(b$states == 3)
which(b$PAM == 3)
apply(b, 1, function(x) seq(1,x))
apply(c, 1, function(x) seq(1,x))
apply(c, 1, function(x) seq(x,1))
dim(b)
unlist(apply(c, 1, function(x) seq(x,1)))
?rle
b[, .SD[c(3,2)], by=states]
b[, .SD[c(3,2)], by=b$states]
b[c(3,2), by = b$states]
?by
head(c)
by(c, function(x) {3,2})
by(c, b$states, function(x) c[3,2])
by(c, b$states)
by(c, c$states)
levels(b$states)
head(b)
head(a4)
tapply(b$HAM, b$states, rank)
tapply(b$HAM, b$states, order)
b$ranks <- tapply(b$HAM, b$states, order)
c$ranks <- tapply(b$HAM, b$states, order)
c
head(c)
d <- tapply(b$HAM, b$states, order)
d
head(b)
c <- split(b, b$states)
cbind(c,d)
data.frame(c,d)
tapply(b$HAM, b$states, mean)
tapply(b$HAM, b$states, b[,3])
tapply(b$HAM, b$states, function(x) x[,3])
tapply(b$HAM, b$states, function(x) x[3,])
tapply(b$HAM, b$states, b[3,])
tapply(b$HAM, b$states, order)
head(C)
head(c)
d <- tapply(b$HAM, b$states, order)
data.frame(c, d)
c
c$WY
d$WY
cbind(c$WY,d$WY)
cbind(c$CO,d$CO)
cbind(c$states,d$states)
unique(a4$states)
statestore <- unique(a4$states)
for(i %in% statestore) {cbind(c$i, d$i)}
for(i in statestore) {cbind(c$i, d$i)}
i
for(i in statestore) {e <- cbind(c$i, d$i)}
e
cbind(c$WY,d$WY)
lapply(c, d, cbind(c$WY,d$WY)
lapply(c, d, cbind(c$WY,d$WY))
?lapply
merge(c, d)
class(c)
class(d)
class(b)
merge(b, d)
e <- merge(b, d)
tail(e)
class(c)
class(d)
abind(c,d)
do.call(cbind, list(c,d))
c <- rownames(d)
c
c <- split(b, b$states)
rownames(c) <- d
sorting.index <- order(b$HAM, b$HN, b$states)
sorting.index
sorted.b <- b[sorting.index,]
tail(sorted.b)
head(c)
c[[3]]
sub(c)
c(sub[3])
head(c)
c[3,]
unsplit(c)
?unsplit
unplist(c, c$states)
unsplit(c, $states)
unsplit(c, c$states)
c
c[,3]
unsplit(c, c$states)
my.order <- function(l) {
order(l[,11], l$Hospital.Name)
}
my.order <- function(l) {
order(l[,11], l$HN)
}
lapply(c, my.order)
my.order <- function(l) {
order(l[,4], l$HN)
}
lapply(c, my.order)
z <- lapply(c, my.order)
cbind(c,z)
rbind(c,z)
merge(c,z)
?merge
class(c)
class(z)
merge(c,z, by = intersect(names(states)))
z
data.frame(z)
data.frame(matrix(unlist(z)))
dim(c)
z1 <- data.frame(matrix(unlist(z)))
cbind(c,z1)
cbind(c,z)
b
data.frame(b,z1)
h <- data.frame(b,z1)
head(h)
z1 <- data.frame(matrix(unlist(z)))
colnames(z1) <- c("rankings")
head(z1)
data.frame(b,z1)
h <- data.frame(b,z1)
head(h)
h[rankings == 20]
h[rankings = 20]
h[h$rankings = 20]
h[h$rankings == 20]
h(rankings == 20)
h(h$rankings == 20)
subset(h, rankings == 20)
head(subset(h, rankings == 20), 10)
head(subset(h, rankings == 20, by states), 10)
head(subset(h, rankings == 20, by = states), 10)
head(subset(h, rankings == 20, by = states, na.rm = FALSE), 10)
h1 <- head(subset(h, rankings == 20, by = states, na.rm = FALSE), 10)
rbind(b$states, h1)
class(b)
class(h1)
merge(b$states, h1)
View(sorted.b)
cbind(statesstore, h1)
cbind(statestore, h1)
length(statestore)
length(h1)
h1 <- cbind(statestore, head(subset(h, rankings == 20, by = states, na.rm = FALSE), 10))
lapply(statestore, h1, rankings == 20)
h1
h
head(h)
head(h, 20)
source("rankall.R")
head(rankall("heart attack", 20), 10)
cbind(statestore, h$HN)
h
h1 <- subset(h, rankings == 20)
cbind(statestore, h1$HN)
h1
cbind(statetore, h1$HN)
cbind(statestore, h1$HN)
statestore
class(statestore)
newstates <- lapply(statestore, as.character)
newstates
class(newstates)
data.frame(newstates, h1)
newsates1 <- data.frame(matrix(unlist(newstates)))
newstates1
newsates1
cbind(newsates1, h1)
data.frame(newsates1, h1)
data.frame(newsates1, h1, na.rm = false)
colnames(newsates1) <- c("states")
newstes1
newsates1
merge(newsates1, h1)
merge(newsates1, h1, by.x = "states", by.y = "states", all = TRUE)
h2 <- merge(newsates1, h1, by.x = "states", by.y = "states", all = TRUE)
head(h2, 10)
head(h2[,c(3,1)])
head(h2[,c(3,1)],10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
c
c[,c(2,3)]
b
head(b)
b1 <- b[,c(2,3,4)]
head(b1)
source("rankall.R")
head(rankall("heart attack", 20), 10)
d <- subset(c, rank2 == number)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
types <- c("heart attack", "heart failure", "pneumonia")
a1 <- data[,c(1,2)]
a11 <- as.factor(data[,c(7)])
a2 <- suppressWarnings(data.frame(lapply(data[,c(11,17,23)], as.numeric)))
a3 <- data.frame(a1,a11,a2)
colnames(a3) <- c("ID", "HN", "states", "HAM", "HFM", "PM")
a4 <- subset(a3)
outcome <- "pneumonia"
if(outcome == "pneumonia") {
b <- na.omit(a4[order(a4$PM, a4$HN),])
b1 <- b[,c(2,3,6)]
c <- split(b1, b1$states)
}
head(c)
tail(c)
tail(c, 20)
tail(data)
tail(b)
subset(b$states = "WY")
subset(b$states == "WY")
subset(b, b$states == "WY")
subset(b, b$HN == "NORTH BIG HORN HOSPITAL DISTRICT")
if(outcome == "pneumonia") {
b <- na.omit(a4[order(a4$PM, a4$HN),])
b1 <- b[,c(2,3,6)]
c <- split(b1, b1$states)
}
tail(b)
tail(b1)
tail(c)
length(c)
length(c$PM)
c
dim(c)
class(c)
a4
tail(a4)
a4(states == "WY")
subset(a4, a4$states = "WY")
subset(a4, a4$states == "WY")
b <- na.omit(a4[order(a4$PM, a4$HN),]
b <- na.omit(a4[order(a4$PM, a4$HN),])
subset(b, b$states == "WY")
b <- a4[order(a4$PM, a4$HN),]
subset(b, b$states == "WY")
test <- b[!is.na(b$PM),]
subset(test, test$states == "WY")
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
types <- c("heart attack", "heart failure", "pneumonia")
a1 <- data[,c(1,2)]
a11 <- as.factor(data[,c(7)])
a2 <- suppressWarnings(data.frame(lapply(data[,c(11,17,23)], as.numeric)))
a3 <- data.frame(a1,a11,a2)
colnames(a3) <- c("ID", "HN", "states", "HAM", "HFM", "PM")
outcome = "heart attack"
a4 <- subset(a3)
if(outcome == "heart attack") {
b <- a4[order(a4$states, a4$HAM, a4$HN),]
b0 <- test <- b[!is.na(b$HAM),]
b1 <- b0[,c(2,3,4)]
c <- split(b1, b1$states)
}
my.order <- function(l) {
order(l[,3], l[,3])
}
z <- lapply(c, my.order)
z1 <- data.frame(matrix(unlist(z)))
colnames(z1) <- c("rankings")
h <- data.frame(b,z1)
class(b)
class(z1)
z1
z
z
c
b
tail(b)
tail(b0)
subset(b, b$states == "WY")
subset(b0, b0$states == "WY")
tail(b1)
tail(c)
h <- data.frame(b1,z1)
source("rankall.R")
head(rankall("heart attack", 20), 10)
my.order <- function(l) {
order(l[,3], l[,3])
}
z <- lapply(c, my.order)
z1 <- data.frame(matrix(unlist(z)))
colnames(z1) <- c("rankings")
outcome
h <- data.frame(b1,z1)
h1 <- subset(h, rankings == number)
head(c)
z1
head(h1)
head(h)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
statestore <- unique(a3$states)
length(statestore)
source("rankall.R")
head(rankall("heart attack", 20), 10)
h2
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
c
length(c$states)
h
max(h$rankings, by = h$states)
max(c$rankings)
c$states
c
c$states[3]
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
types <- c("heart attack", "heart failure", "pneumonia")
a1 <- data[,c(1,2)]
a11 <- as.factor(data[,c(7)])
a2 <- suppressWarnings(data.frame(lapply(data[,c(11,17,23)], as.numeric)))
a3 <- data.frame(a1,a11,a2)
colnames(a3) <- c("ID", "HN", "states", "HAM", "HFM", "PM")
statestore <- unique(a3$states)
outcome = "pneumonia"
a4 <- subset(a3)
if(outcome == "pneumonia") {
b <- a4[order(a4$PM, a4$HN),]
b0 <- test <- b[!is.na(b$PM),]
b1 <- b0[,c(2,3,6)]
c <- split(b1, b1$states)
}
if(num == "best"){number <- 1}
else if(num == "worst"){number <- 1}
else {number <- as.numeric(num)}
number = "worst"
if(num == "best"){number <- 1}
else if(num == "worst"){number <- 1}
else {number <- as.numeric(num)}
num = "worst"
if(num == "best"){number <- 1}
else if(num == "worst"){number <- 1}
else {number <- as.numeric(num)}
number <- 1
my.order <- function(l) {
order(l[,3], l[,1])
}
my.orderworst <- function(l) {
order(rev(l[,3]), rev(l[,1]))
}
z <- lapplY(c, my.orderworst)
z <- lapply(c, my.orderworst)
z
z1 <- data.frame(matrix(unlist(z)))
colnames(z1) <- c("rankings")
z1
h <- data.frame(b1,z1)
h
tail(h)
z1
tail(z)
tail(c)
tail(z1)
z1
h1 <- subset(h, rankings == number)
h1
h
tail(h)
h<- data.frame(c,z1)
tail(b1)
if(outcome == "pneumonia") {
b <- a4[order(a4$PM, a4$HN, a4$states),]
b0 <- test <- b[!is.na(b$PM),]
b1 <- b0[,c(2,3,6)]
c <- split(b1, b1$states)
}
h <- data.frame(b1,z1)
h
tail(h)
tail(b1)
tail(b)
if(outcome == "pneumonia") {
b <- a4[order(a4$states, a4$PM, a4$HN),]
b0 <- test <- b[!is.na(b$PM),]
b1 <- b0[,c(2,3,6)]
c <- split(b1, b1$states)
}
tail(b)
tail(b0)
tail(b1)
h <- data.frame(b1,z1)
tail(h)
h1 <- subset(h, rankings == number)
tail(h1)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
list.files()
source("rprog-scripts-submitscript3.R")
submit()
rankall("heart attack", 4)
source("rankall.R")
rankall("heart attack", 4)
submit()
submit()
submit()
